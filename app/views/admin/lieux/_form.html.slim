= simple_form_for [:admin, lieu.organisation, lieu] do |f|
  = render 'model_errors', model: lieu
  = f.input :name, hint: "Le nom apparaîtra dans les notifications mails et SMS aux usagers"
  = f.input :phone_number, hint: "Ce numéro sera affiché coté usager pour leurs permettrent de vous contacter. Faite en sorte que les personnes qui répondront au téléphone puisse avoir accès à RDV-Solidarités"
  = f.input :address, input_html: { class: "places-js-container" }, hint: "L'adresse apparaîtra dans les notifications mails et SMS aux usagers"
  = f.input :enabled, hint: true
  = f.input :latitude, as: :hidden
  = f.input :longitude, as: :hidden

  .row
    - if lieu.persisted?
      .col.text-left
        - if lieu.plage_ouvertures.any? || lieu.rdvs.any?
          = button_tag "Supprimer", type: 'button', disabled: true, class: "btn btn-outline-danger"
        - else
          = link_to "Supprimer", admin_organisation_lieu_path(lieu.organisation, lieu), method: :delete, class: "btn btn-outline-danger", data: { confirm: "Confirmez-vous la suppression de ce lieu ?"}
    .col.text-right
      = link_to "Annuler", admin_organisation_lieux_path(lieu.organisation), class: "btn btn-link"
      = f.button :submit
  .row.mt-3
    .col
      - if lieu.plage_ouvertures.any? || lieu.rdvs.any?
        .alert.alert-info
          h5.alert-heading Ce lieu ne peut pas être supprimé.
          - if lieu.plage_ouvertures.any?
            p
              | Des plages d’ouvertures sont programmées à ce lieu. Déplacez-les pour pouvoir le supprimer.
          - if lieu.rdvs.any?
            p
              = link_to "Des RDVs sont associés à ce lieu.", admin_organisation_rdvs_path(current_organisation, lieu_id: lieu.id)
              |  Supprimez-les avant de pouvoir supprimer ce lieu.
