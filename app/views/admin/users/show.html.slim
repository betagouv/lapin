- content_for(:menu_item) { 'menu-users' }

- content_for :title do
  | #{@user.full_name}

- content_for :breadcrumb do
  ol.breadcrumb.mr-2.d-inline-flex
    li.breadcrumb-item
      = link_to 'Vos usagers', admin_organisation_users_path(current_organisation)
    - if @user.relative?
      li.breadcrumb-item
        = link_to @user.responsible.full_name, admin_organisation_user_path(current_organisation, @user.responsible)
    li.breadcrumb-item.active #{@user.full_name}

  = link_to "Trouver un créneau", admin_organisation_agent_searches_path(current_organisation, user_ids: [@user.id]), class: "btn btn-outline-white"

.row
  .col-md-6
    .card#spec-primary-user-card
      .card-body
        - if @user.invitable?
          .row.bg-info.text-white.p-2.mb-3
            .col-md-8
              | Cet usager ne s'est pas encore créé de compte.
              - if @user.invitation_sent_at
                p.small.m-0 Invitation envoyée il y a #{distance_of_time_in_words_to_now(@user.invitation_sent_at)}
            .col-md-4.text-right
              = link_to 'Inviter', invite_admin_organisation_user_path(current_organisation, @user), method: :post, class: 'btn btn-outline-white'

        - if @user.responsible?
          h4.card-title.mb-3 Informations générales
          = render 'responsible_information', user: @user

        - else
          h4.card-title.mb-3 Informations de votre proche
          ul.list-unstyled
            - [:first_name, :last_name, :birth_date, :notes].each do |attr_name|
              li= render "common/user_attribute", user: @user, attribute_name: attr_name

        .row.mt-3
          .col.text-left
            - if @user.can_be_soft_deleted_from_organisation?(current_organisation)
              = link_to "Supprimer", admin_organisation_user_path(current_organisation, @user), method: :delete, class: "btn btn-outline-danger", data: { confirm: user_soft_delete_confirm_message(@user)}
            - else
              = link_to "Supprimer", "#", class: "btn btn-outline-danger", onclick: "alert(this.dataset.message)", data: { message: I18n.t("users.can_not_delete_because_has_future_rdvs") }
          .col.text-right
            = link_to "Modifier", edit_admin_organisation_user_path(current_organisation, @user), class: "btn btn-primary"

    - if @user.responsible?
      .card
        .card-header
          .d-flex.justify-content-between
            .mt-1 Agents référents
            button.small.btn.btn-primary.show.collapse-referent-form type="button" data-toggle="collapse" data-target=".collapse-referent-form" aria-expanded="false" aria-controls="collapse-referent-form"
              | Modifier
        .card-body
          .collapse.collapse-referent-form
            = simple_form_for(@user, url: admin_organisation_user_referents_path(current_organisation, @user), method: :put) do |f|
              = f.association(:agents, collection: policy_scope(Agent).order_by_last_name, label_method: :full_name_and_service, label: false, multiple: true, input_html: {class: 'select2-input'})
              = f.button :submit, "Enregistrer"
          .show.collapse-referent-form
            ul.list-unstyled.mb-2
              - @user.agents.includes([:service]).each do |agent|
                li.mb-2
                | #{agent.full_name_and_service}
              - if @user.agents.empty?
                .font-italic aucun référent

    - if @user.relative?
      .card#spec-secondary-user-card
        .card-body
          h4.card-title.mb-3 Informations sur l'usager en charge
          = render 'admin/users/responsible_information', user: @user.responsible

      .card
        .card-header
            .mt-1 Agents référents du responsable
        .card-body
          ul.list-unstyled.mb-2
            - @user.responsible.agents.includes([:service]).each do |agent|
              li.mb-2
              | #{agent.full_name_and_service}
            - if @user.responsible.agents.empty?
              .font-italic aucun référent


  - rdvs = @user.rdvs.where(organisation_id: current_organisation)
  .col-md-6
    .card
      .card-header
        | Statuts
        small.text-muted< sur #{rdvs.count} RDV
      .card-body
        .row
          .col-md-4
            .bg-light.p-2.mb-3.mb-md-0.text-center
              p.h2= rdvs.status('unknown_past').count
              p.lead
                => t 'stats.rdv_counters.rdvs.unknown_past', count: rdvs.status('unknown_past').count
                = rdv_danger_icon(rdvs.status('unknown_past').count)
              = link_to "Voir", admin_organisation_rdvs_path(current_organisation, user_id: @user.id, breadcrumb_page: "user", status: "unknown_past"), class: "btn btn-outline-dark"
          .col-md-4
            .bg-success.text-white.p-2.mb-3.text-center
              p.h2= rdvs.seen.count
              p.lead= t 'stats.rdv_counters.rdvs.seen', count: rdvs.seen.count
              = link_to "Voir", admin_organisation_rdvs_path(current_organisation, user_id: @user.id, breadcrumb_page: "user", status: "seen"), class: "btn btn-outline-white"
          .col-md-4
            .bg-info.text-white.p-2.mb-3.text-center
              p.h2= rdvs.status('unknown_future').count
              p.lead À venir
              = link_to "Voir", admin_organisation_rdvs_path(current_organisation, user_id: @user.id, breadcrumb_page: "user", status: "unknown_future"), class: "btn btn-outline-white"
        .row
          .col-md-6
            .bg-tertiary.text-white.p-2.mb-3.text-center
              p.h2= rdvs.excused.count
              p.lead= t 'stats.rdv_counters.rdvs.excused', count: rdvs.excused.count
              = link_to "Voir", admin_organisation_rdvs_path(current_organisation, user_id: @user.id, breadcrumb_page: "user", status: "excused"), class: "btn btn-outline-white"
          .col-md-6
            .bg-danger.text-white.p-2.mb-3.text-center
              p.h2= rdvs.notexcused.count
              p.lead= t 'stats.rdv_counters.rdvs.notexcused', count: rdvs.notexcused.count
              = link_to "Voir", admin_organisation_rdvs_path(current_organisation, user_id: @user.id, breadcrumb_page: "user", status: "notexcused"), class: "btn btn-outline-white"

    = render "admin/rdvs/rdvs_history", user: @user

    - if @user.responsible?
      .card
        .card-header Proches
        .card-body
          ul.list-group.mb-2
            - if @user.relatives.within_organisation(current_organisation).active.empty?
              li.list-group-item
                em Aucun proche
            - @user.relatives.within_organisation(current_organisation).active.each do |relative|
              li.list-group-item
                .row
                  .col
                    => link_to relative.full_name, admin_organisation_user_path(current_organisation, relative)
                    = "(#{age(relative)})" if relative.birth_date
          .text-right
            = link_to "Ajouter un proche", new_admin_organisation_user_path(current_organisation, responsible_id: @user.id), class: "btn btn-outline-primary"
