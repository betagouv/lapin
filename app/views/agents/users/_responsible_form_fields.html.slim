- user = f.object

- email_opts = input_opts.deep_dup
- email_opts[:input_html]["data-target".to_sym] += " agents--user-form--invite.emailInput"
= f.input(:email, as: :email, **email_opts)

- if user.new_record?
  = f.input( \
    :invite_on_create, \
    as: :boolean, \
    wrapper_html: { \
      id: "#invite-user", \
      class:"align-items-baseline ml-0 d-none", \
      data: { target: "agents--user-form--invite.inviteRow" } \
    }, \
    **input_opts, \
  )

- elsif user.pending_reconfirmation?
  .form-text.text-muted.mb-2
    | En attente de confirmation pour #{user.unconfirmed_email}

= f.input :phone_number, as: :tel, **input_opts

= f.input :address, **(input_opts.deep_merge(input_html: { class: "places-js-container" }))

= f.association( \
  :agents, \
  collection: current_organisation.agents.complete.active.includes(:service), \
  label_method: :full_name_and_service, \
  label: "Agent(s) référent(s)", \
  **{input_html: { multiple: true, class: 'select2-input' }}.deep_merge(input_opts), \
)

.form-row
  .col-md-6= f.input :caisse_affiliation, collection: User.human_enum_collection(:caisse_affiliation), **input_opts
  .col-md-6= f.input :affiliation_number, **input_opts

.form-row
  .col-md-6= f.input :family_situation, collection: User.human_enum_collection(:family_situation), **input_opts
  .col-md-6= f.input :number_of_children, **{ input_html: { min: '0', max: '15', step: 'any' } }.deep_merge(input_opts)

= f.input :logement, collection: User.human_enum_collection(:logement), **input_opts
